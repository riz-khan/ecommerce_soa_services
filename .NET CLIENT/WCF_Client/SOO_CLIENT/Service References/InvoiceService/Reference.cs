//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SOO_CLIENT.InvoiceService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Invoice", Namespace="uk.ac.bcu.soa.wcf")]
    [System.SerializableAttribute()]
    public partial class Invoice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalAmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIdField, value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceDateTime {
            get {
                return this.InvoiceDateTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceDateTimeField, value) != true)) {
                    this.InvoiceDateTimeField = value;
                    this.RaisePropertyChanged("InvoiceDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceId {
            get {
                return this.InvoiceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceIdField, value) != true)) {
                    this.InvoiceIdField = value;
                    this.RaisePropertyChanged("InvoiceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderIdField, value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentId {
            get {
                return this.PaymentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentIdField, value) != true)) {
                    this.PaymentIdField = value;
                    this.RaisePropertyChanged("PaymentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentMethod {
            get {
                return this.PaymentMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentMethodField, value) != true)) {
                    this.PaymentMethodField = value;
                    this.RaisePropertyChanged("PaymentMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalAmount {
            get {
                return this.TotalAmountField;
            }
            set {
                if ((this.TotalAmountField.Equals(value) != true)) {
                    this.TotalAmountField = value;
                    this.RaisePropertyChanged("TotalAmount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="uk.ac.bcu.soa.wcf", ConfigurationName="InvoiceService.IInvoiceRegistry")]
    public interface IInvoiceRegistry {
        
        [System.ServiceModel.OperationContractAttribute(Action="uk.ac.bcu.soa.wcf/IInvoiceRegistry/GenerateInvoice", ReplyAction="uk.ac.bcu.soa.wcf/IInvoiceRegistry/GenerateInvoiceResponse")]
        bool GenerateInvoice(string orderId, string customerId, string paymentId, double totalAmount, string paymentMethod);
        
        [System.ServiceModel.OperationContractAttribute(Action="uk.ac.bcu.soa.wcf/IInvoiceRegistry/GenerateInvoice", ReplyAction="uk.ac.bcu.soa.wcf/IInvoiceRegistry/GenerateInvoiceResponse")]
        System.Threading.Tasks.Task<bool> GenerateInvoiceAsync(string orderId, string customerId, string paymentId, double totalAmount, string paymentMethod);
        
        [System.ServiceModel.OperationContractAttribute(Action="uk.ac.bcu.soa.wcf/IInvoiceRegistry/GetInvoice", ReplyAction="uk.ac.bcu.soa.wcf/IInvoiceRegistry/GetInvoiceResponse")]
        SOO_CLIENT.InvoiceService.Invoice GetInvoice(string invoiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uk.ac.bcu.soa.wcf/IInvoiceRegistry/GetInvoice", ReplyAction="uk.ac.bcu.soa.wcf/IInvoiceRegistry/GetInvoiceResponse")]
        System.Threading.Tasks.Task<SOO_CLIENT.InvoiceService.Invoice> GetInvoiceAsync(string invoiceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="uk.ac.bcu.soa.wcf/IInvoiceRegistry/GetAllInvoices", ReplyAction="uk.ac.bcu.soa.wcf/IInvoiceRegistry/GetAllInvoicesResponse")]
        SOO_CLIENT.InvoiceService.Invoice[] GetAllInvoices();
        
        [System.ServiceModel.OperationContractAttribute(Action="uk.ac.bcu.soa.wcf/IInvoiceRegistry/GetAllInvoices", ReplyAction="uk.ac.bcu.soa.wcf/IInvoiceRegistry/GetAllInvoicesResponse")]
        System.Threading.Tasks.Task<SOO_CLIENT.InvoiceService.Invoice[]> GetAllInvoicesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInvoiceRegistryChannel : SOO_CLIENT.InvoiceService.IInvoiceRegistry, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InvoiceRegistryClient : System.ServiceModel.ClientBase<SOO_CLIENT.InvoiceService.IInvoiceRegistry>, SOO_CLIENT.InvoiceService.IInvoiceRegistry {
        
        public InvoiceRegistryClient() {
        }
        
        public InvoiceRegistryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InvoiceRegistryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InvoiceRegistryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InvoiceRegistryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool GenerateInvoice(string orderId, string customerId, string paymentId, double totalAmount, string paymentMethod) {
            return base.Channel.GenerateInvoice(orderId, customerId, paymentId, totalAmount, paymentMethod);
        }
        
        public System.Threading.Tasks.Task<bool> GenerateInvoiceAsync(string orderId, string customerId, string paymentId, double totalAmount, string paymentMethod) {
            return base.Channel.GenerateInvoiceAsync(orderId, customerId, paymentId, totalAmount, paymentMethod);
        }
        
        public SOO_CLIENT.InvoiceService.Invoice GetInvoice(string invoiceId) {
            return base.Channel.GetInvoice(invoiceId);
        }
        
        public System.Threading.Tasks.Task<SOO_CLIENT.InvoiceService.Invoice> GetInvoiceAsync(string invoiceId) {
            return base.Channel.GetInvoiceAsync(invoiceId);
        }
        
        public SOO_CLIENT.InvoiceService.Invoice[] GetAllInvoices() {
            return base.Channel.GetAllInvoices();
        }
        
        public System.Threading.Tasks.Task<SOO_CLIENT.InvoiceService.Invoice[]> GetAllInvoicesAsync() {
            return base.Channel.GetAllInvoicesAsync();
        }
    }
}
